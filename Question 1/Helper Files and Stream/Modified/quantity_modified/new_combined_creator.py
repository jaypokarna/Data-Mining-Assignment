import csv

path1 = "./combined.csv"
path2 = "./combined_with_prices.csv"
#path1 = "E:/ACADEMICS/Data Mining/Assignment/Dataset for DM Assignment/augSales.csv"
#path2 = "E:/ACADEMICS/Data Mining/Assignment/Dataset for DM Assignment/Modified/modified_augSales.txt"

prices_dic = {'1': '7', '2': '8', '3': '12', '4': '21', '5': '8', '6': '10', '12': '30', '14': '10', '15': '35', '16': '5', '18': '55', '19': '20', '20': '25', '21': '30', '22': '15', '23': '20', '24': '25', '25': '10', '26': '5', '41': '15', '45': '10', '46': '18', '47': '10', '48': '10', '49': '20', '50': '20', '51': '15', '54': '20', '73': '30', '74': '25', '76': '33', '93': '32', '94': '14', '98': '10', '99': '10', '100': '35', '102': '10', '103': '10', '104': '10', '105': '25', '107': '10', '108': '20', '123': '8', '124': '25', '125': '35', '126': '40', '127': '55', '128': '25', '129': '16', '130': '21', '131': '21', '132': '21', '133': '21', '134': '15', '135': '21', '136': '25', '137': '30', '138': '22', '139': '21', '140': '26', '141': '40', '142': '25', '143': '16', '144': '20', '145': '40', '146': '85', '147': '75', '148': '90', '149': '3', '150': '6', '151': '12', '152': '15', '153': '17', '154': '22', '155': '27', '156': '30', '157': '32', '158': '14', '159': '20', '160': '25', '161': '12', '162': '18', '163': '20', '164': '81', '165': '30', '166': '85', '167': '10', '168': '27', '169': '25', '170': '20', '171': '20', '172': '80', '173': '45', '174': '12', '175': '18', '176': '30', '177': '95', '178': '40', '179': '23', '180': '170', '181': '10', '182': '95', '183': '20', '184': '25', '185': '25', '186': '18', '187': '15', '188': '18', '189': '12', '190': '15', '191': '20', '192': '20', '193': '18', '194': '10', '195': '35', '196': '25', '197': '2', '198': '20', '900': '100', '901': '-100', '902': '25', '903': '5'}
maindic = {'2': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '151': ({0, 1, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '128': ({0, 1, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '134': ({0, 1, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '123': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '154': ({0, 1, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '130': ({0, 1, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '76': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '188': ({0, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '146': ({0, 1, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '169': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '25': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '26': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '148': ({0, 1, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '107': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '142': ({0, 1, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '129': ({0, 1, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '22': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '1': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '138': ({0, 1, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '135': ({0, 1, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '164': ({0, 1, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '161': ({0, 1, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '108': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '179': ({17, 18, 20}, {'F3', 'F2', 'F4', 'F0', 'F1', 'F5'}), '124': ({0, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '155': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '12': ({0, 1, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '156': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '15': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '141': ({0, 1, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '170': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '74': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '21': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '140': ({0, 1, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '160': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '93': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '14': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '139': ({0, 1, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '183': ({0, 1, 17, 18, 20, 21, 22, 23}, {'F0', 'H1', 'F5'}), '16': ({0, 17, 18, 20, 21, 22, 23}, {'F3', 'F0', 'F5'}), '100': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '177': ({0, 1, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '105': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '176': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '187': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '163': ({0, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '173': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '178': ({0, 1, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '159': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '5': ({0, 1}, {'F0'}), '20': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '18': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '132': ({0, 1, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '19': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '133': ({0, 1, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '157': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '46': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '167': ({0, 17, 18, 20, 21, 22, 23}, {'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '193': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '168': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'F1', 'F5'}), '194': ({0, 1, 21, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '45': ({0, 1, 17, 18, 20, 21, 22, 23}, {'F3', 'F2', 'F4', 'F0', 'H2', 'F5'}), '190': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '50': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '166': ({0, 1, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '158': ({0, 18, 22, 23}, {'F0', 'F2', 'F4'}), '186': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '131': ({0, 1, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '191': ({0, 1, 22, 23}, {'H1', 'F3', 'F4', 'H2', 'F5'}), '48': ({0, 1, 17, 18, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '192': ({0, 1, 17, 18, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '175': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '171': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '136': ({0, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1'}), '180': ({20, 21, 22}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F5'}), '182': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1'}), '152': ({17, 18, 20, 21, 22}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '184': ({1, 17, 18, 20, 21, 22}, {'F3', 'F2', 'F4', 'H2', 'F1', 'F5'}), '51': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'F0', 'H2', 'F5'}), '98': ({0, 1, 17, 18, 20, 22, 23}, {'H1', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '195': ({0, 1, 17, 18, 20, 21, 22, 23}, {'H1', 'F3', 'F2', 'F4', 'H2', 'F1', 'F5'}), '181': ({0, 1, 18, 22}, {'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '94': ({1, 18, 21, 23}, {'H1', 'F3', 'F2', 'F4', 'F1', 'F5'}), '99': ({0, 18, 20}, {'H1', 'F3', 'F4', 'F0', 'F1'}), '4': ({0, 20, 21, 22, 23}, {'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '174': ({0, 17, 18, 22, 23}, {'F3', 'F2', 'F4', 'F0', 'H2', 'F1', 'F5'}), '196': ({0, 1}, {'H1', 'F5'}), '198': ({0, 1}, {'H1', 'F0', 'F4'}), '54': ({20}, {'H1'}), '162': ({0}, {'F0', 'F2', 'F4'}), '189': ({1, 23}, {'H1', 'F2'}), '172': ({1, 18, 21, 23}, {'F3', 'F2', 'F4', 'F1', 'F5'}), '165': ({22}, {'H2'}), '185': ({1, 22, 23}, {'F2', 'F4', 'H2', 'F5'})}

'''secondary_list = [
('151',21, 'F3'), 
('134',0, 'F3'),
('2',17, 'F2'),
('154',23, 'F3'),
('154',22, 'F2'),
('151',23, 'F2'),
('76',22, 'F2'),
('128',0, 'F2'),
('151',18, 'F2'),
('151',0, 'F3'),
('154',20, 'F2'),
('151',20, 'F3'),
('128',22, 'F2'),
('123',17, 'F2'),
('154',23, 'F4'),
('134',23, 'F2'),
('151',22, 'F3'),
('151',20, 'F4'),
('154',0, 'F3'),
('134',1, 'F2'),
('128', 23, 'F2'),
('134', 23, 'F3')
]'''




segment_wt = {'F1': 12, 'F2': 32, 'F3': 30, 'F4': 20, 'F5': 3, 'H1': 2, 'H2': 20, 'P5':1, 'F6':1, 'B1':1, 'H4':1, 'F7':1, 'D1':1, 'H3':1, 'P3':1, 'P1':1, 'P2':1}

missing = 0
total_revenue = 0
total_revenue_orig = 0
minute_partition = 59

def get_penalty():
    ans = 0
    '''for t in secondary_list:
        price_change = min(int(prices_dic[t[0]])*.1, 10)
        seg_wt = '''


    
    ans = 0
    for key, val in maindic.items():
        seg_wt_total = 0
        for seg in val[1]:
            if(seg == 'F0'):
                continue
            seg_wt_total += segment_wt[seg]
        total_hours = len(val[0])**2
        '''ALTER HERE TO NOT RETURN THE MAX CHANGE BUT SOMETHING ELSE'''
        '''ALTER HERE TO NOT RETURN THE MAX CHANGE BUT SOMETHING ELSE'''
        '''ALTER HERE TO NOT RETURN THE MAX CHANGE BUT SOMETHING ELSE'''
        '''ALTER HERE TO NOT RETURN THE MAX CHANGE BUT SOMETHING ELSE'''
        '''ALTER HERE TO NOT RETURN THE MAX CHANGE BUT SOMETHING ELSE'''
        '''ALTER HERE TO NOT RETURN THE MAX CHANGE BUT SOMETHING ELSE'''
        '''ALTER HERE TO NOT RETURN THE MAX CHANGE BUT SOMETHING ELSE'''
        price_change = min(int(prices_dic[key])*.1, 10)
        ans += price_change * total_hours * seg_wt_total
    return ans

def formula(item, hr, grp, price):
    if(str(item) not in maindic):
        return 0
        
    if((int(hr) in maindic[str(item)][0]) and (grp in maindic[str(item)][1])):
        '''print('min =', min(price*0.1, 10))'''
        '''ALTER HERE TO NOT RETURN THE MAX CHANGE BUT SOMETHING ELSE'''
        '''ALTER HERE TO NOT RETURN THE MAX CHANGE BUT SOMETHING ELSE'''
        '''ALTER HERE TO NOT RETURN THE MAX CHANGE BUT SOMETHING ELSE'''
        '''ALTER HERE TO NOT RETURN THE MAX CHANGE BUT SOMETHING ELSE'''
        '''ALTER HERE TO NOT RETURN THE MAX CHANGE BUT SOMETHING ELSE'''
        '''ALTER HERE TO NOT RETURN THE MAX CHANGE BUT SOMETHING ELSE'''
        '''ALTER HERE TO NOT RETURN THE MAX CHANGE BUT SOMETHING ELSE'''
        return min(price*.1, 10)
    else:
        return 0
    
with open(path1,'rt',encoding="latin1") as csvfile,  open(path2, 'w', encoding="latin1") as modified:
	r = csv.reader(x.replace('\0', '') for x in csvfile)
	spamwriter = csv.writer(modified, delimiter='\t', quotechar='|', quoting=csv.QUOTE_MINIMAL)
    
	flag = True
	for row in r:
		row = row[0].split('\t')
		towrite = []
		for val in row:
			towrite.append(str(val))
		if(flag):
			flag = False
			towrite.append('orig_selling_price')
		else:
			itemid = row[1]
			towrite.append(prices_dic[itemid])
		spamwriter.writerow(towrite)
    
